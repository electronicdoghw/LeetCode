class Solution:
    def partition(self, s: str) -> List[List[str]]:
        def isPalindromic(path):
            i = 0
            j = len(path) -1
            while i<j:
                if path[i] == path[j]:
                    i += 1
                    j -= 1
                else:
                    return False
            return True

        def dfs(start,end): #[start,end] 
            if start >= end:
                res.append(path[:])
                return
            for i in range(start, end):
                if not isPalindromic(s[start:i+1]):
                    continue
                path.append(s[start:i+1])
                dfs(i + 1, end)
                path.pop()
                    
            
        if len(s) == 0:
            return []
        res = []
        path = []
        dfs(0,len(s))
        return res
